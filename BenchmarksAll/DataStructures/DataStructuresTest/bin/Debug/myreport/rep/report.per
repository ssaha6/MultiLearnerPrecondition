<?xml version="1.0" encoding="utf-8"?>
<pex id="{2c3bb405-83fb-49b4-be7b-f0ec6b4a438b}" creationTime="2018-12-13 18:27:33Z" configuration="DataStructures.Test!\ArrayListTest!\PUT_CommutativityAddContains!" product="DataStructures" created="2018-12-13 18:27:33Z" pexVersion="0.94.51006.1" xml="D:\MultiLearnerPrecondition\BenchmarksAll\DataStructures\DataStructuresTest\bin\Debug\myreport\rep\report.per" html="D:\MultiLearnerPrecondition\BenchmarksAll\DataStructures\DataStructuresTest\bin\Debug\myreport\rep\report.html"><environment commandLine="&quot;C:\Program Files (x86)\Microsoft Pex\bin\Microsoft.Pex.x86.exe&quot; BenchmarksAll/DataStructures/DataStructuresTest/bin/Debug/DataStructuresTest.dll /methodnamefilter:PUT_CommutativityAddContains! /namespacefilter:DataStructures.Test! /typefilter:ArrayListTest! /noconsole /targetx86 /donotopenreport /reportname:rep /reportrootpath:myreport" machineName="YOGA15" osVersion="Microsoft Windows NT 6.2.9200.0" processorCount="8" clrVersion="4.0.30319.42000" bitness="x86" user="me"><envVars><envVar name="_" value="/cygdrive/c/install/Python27/python"/>
<envVar name="COR_PROFILER" value="{21bbb412-71ac-41f9-a377-48529a4859cf}"/>
<envVar name="ConEmuPID" value="16072"/>
<envVar name="PUBLIC" value="C:\Users\Public"/>
<envVar name="USERPROFILE" value="C:\Users\me"/>
<envVar name="ALLUSERSPROFILE" value="C:\ProgramData"/>
<envVar name="CLRMONITOR_INJECT_NAMESPACES" value=""/>
<envVar name="LOGONSERVER" value="\\YOGA15"/>
<envVar name="COMPLUS_ProfAPI_ProfilerCompatibilitySetting" value="EnableV2Profiler"/>
<envVar name="INFOPATH" value="/usr/local/info:/usr/share/info:/usr/info"/>
<envVar name="LOCALAPPDATA" value="C:\Users\me\AppData\Local"/>
<envVar name="ConEmuDir" value="C:\install\cmder\vendor\conemu-maximus5"/>
<envVar name="ConEmuTask" value="{cygwin}"/>
<envVar name="CLRMONITOR_INSTRUMENT_ASSEMBLIES" value="DataStructures,DataStructuresTest,FSharp.Core,FSharp.PowerPack,Microsoft.Contracts,Microsoft.VisualBasic,Microsoft.VisualStudio.QualityTools.UnitTestFramework,System,System.Core,System.Web"/>
<envVar name="ConEmuHWND" value="0x018E0CC2"/>
<envVar name="TZ" value="America/Chicago"/>
<envVar name="OneDrive" value="C:\Users\me\OneDrive"/>
<envVar name="CLRMONITOR_INITIALIZED" value="0xa"/>
<envVar name="ORIGINAL_PATH" value="/cygdrive/c/install/cmder/vendor/conemu-maximus5/ConEmu/Scripts:/cygdrive/c/install/cmder/vendor/conemu-maximus5:/cygdrive/c/install/cmder/vendor/conemu-maximus5/ConEmu:/cygdrive/c/Program Files/Docker/Docker/Resources/bin:/cygdrive/c/install/Python27:/cygdrive/c/install/Python27/Scripts:/cygdrive/c/install/Python37/Scripts:/cygdrive/c/install/Python37:/cygdrive/c/WINDOWS/system32:/cygdrive/c/WINDOWS:/cygdrive/c/WINDOWS/System32/Wbem:/cygdrive/c/WINDOWS/System32/WindowsPowerShell/v1.0:/cygdrive/c/WINDOWS/System32/OpenSSH:/cygdrive/c/install/nodejs:/cygdrive/c/install/cmder:/cygdrive/c/install/subl:/cygdrive/c/install/VSCode-insider/bin:/cygdrive/c/install/calibre:/cygdrive/c/install/cmake/bin:/cygdrive/c/install/go/bin:/cygdrive/c/install/graphviz-2.38/bin:/cygdrive/c/install/Tower:/usr/bin:/:/cygdrive/c/ProgramData/chocolatey/bin:/cygdrive/c/install/lxrunoffline:/cygdrive/d/Chrome/install/texlive/bin/win32:/cygdrive/d/Chrome/install/android-sdk/platform-tools:/cygdrive/d/Chrome/nox/Nox/bin:/cygdrive/c/install/nirsoft:/cygdrive/c/Program Files/dotnet:/cygdrive/c/Program Files/Microsoft SQL Server/130/Tools/Binn:/cygdrive/c/Program Files (x86)/Microsoft SQL Server/100/Tools/Binn:/cygdrive/c/Program Files/Microsoft SQL Server/100/Tools/Binn:/cygdrive/c/Program Files/Microsoft SQL Server/100/DTS/Binn:/cygdrive/c/Users/me/AppData/Roaming/Composer/vendor/bin:/cygdrive/c/Program Files (x86)/Microsoft Visual Studio 10.0/Common7/IDE:/cygdrive/c/install/nodejs:/cygdrive/c/Program Files (x86)/Common Files/GTK/2.0/bin:/cygdrive/c/Windows/Microsoft.NET/Framework/v4.0.30319:/cygdrive/c/install/Java/jre1.8.0/bin:/cygdrive/c/install/Java/jdk-11.0.1/bin:/cygdrive/c/install/Meld/Scripts:/cygdrive/c/install/idea/bin:/cygdrive/c/install/CodeCompare:/cygdrive/c/install/cloc:/cygdrive/c/Program Files (x86)/Windows Kits/10/Windows Performance Toolkit:/cygdrive/c/install/Git/cmd:/cygdrive/d/z3/z3-4.8.1-win/bin:/cygdrive/c/install/ctags58:/cygdrive/c/Program Files (x86)/Microsoft Pex/bin:/cygdrive/c/install/ffmpeg/bin:/cygdrive/c/install/gdrive:/cygdrive/c/Users/me/AppData/Local/Microsoft/WindowsApps:/cygdrive/c/Users/me/AppData/Roaming/npm:/cygdrive/c/Users/me/.dotnet/tools:/cygdrive/c/Users/me/AppData/Local/Programs/radare2:/cygdrive/c/install/heroku/bin"/>
<envVar name="ConEmuBaseDir" value="C:\install\cmder\vendor\conemu-maximus5\ConEmu"/>
<envVar name="VBOX_MSI_INSTALL_PATH" value="C:\Program Files\Oracle\VirtualBox\"/>
<envVar name="CLRMONITOR_FLAGS" value=""/>
<envVar name="SESSIONNAME" value="Console"/>
<envVar name="ProgramW6432" value="C:\Program Files"/>
<envVar name="ConEmuServerPID" value="16924"/>
<envVar name="SYSTEMROOT" value="C:\WINDOWS"/>
<envVar name="ConEmuCfgDir" value="C:\install\cmder\vendor\conemu-maximus5"/>
<envVar name="SHELL" value="/bin/bash"/>
<envVar name="VISUALGDB_DIR" value="C:\Program Files (x86)\Sysprogs\VisualGDB\"/>
<envVar name="OS" value="Windows_NT"/>
<envVar name="PROCESSOR_ARCHITECTURE" value="x86"/>
<envVar name="ANSICON" value="292x32766 (292x74)"/>
<envVar name="CLRMONITOR_PROTECT_ALL_CCTORS" value="1"/>
<envVar name="SHLVL" value="1"/>
<envVar name="PATHEXT" value=".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW"/>
<envVar name="JAVA_HOME" value="C:\install\Java\jdk-11.0.1"/>
<envVar name="CLRMONITOR_PROTECT_TYPES" value="Microsoft.FSharp.Text.Printf,Microsoft.FSharp.Text.PrintfImpl"/>
<envVar name="CLRMONITOR_INSTRUMENT_NAMESPACES" value="System.Collections,System.Collections.Generic,System.Collections.ObjectModel,System.Collections.Specialized,System.Diagnostics.Contracts"/>
<envVar name="CommonProgramW6432" value="C:\Program Files\Common Files"/>
<envVar name="ProgramFiles(x86)" value="C:\Program Files (x86)"/>
<envVar name="COMSPEC" value="C:\WINDOWS\system32\cmd.exe"/>
<envVar name="USERNAME" value="me"/>
<envVar name="ANDROID_HOME" value="D:\Chrome\install\android-sdk"/>
<envVar name="chromedatadir" value="--user-data-dir=&quot;D:\Chrome\chrome_data_dir&quot;"/>
<envVar name="ConEmuPalette" value="&lt;Tomorrow&gt;"/>
<envVar name="VS100COMNTOOLS" value="C:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\Tools\"/>
<envVar name="TERM" value="cygwin"/>
<envVar name="LANG" value="en_US.UTF-8"/>
<envVar name="USER" value="me"/>
<envVar name="PROMPT" value="$P$G"/>
<envVar name="ANSICON_DEF" value="7"/>
<envVar name="VSSDK100Install" value="C:\Program Files (x86)\Microsoft Visual Studio 2010 SDK SP1\"/>
<envVar name="PATH" value="C:\Program Files\mingw-w64\x86_64-7.2.0-posix-seh-rt_v5-rev1\mingw64\bin\;C:\cygwin64\usr\local\bin;C:\cygwin64\bin;C:\install\cmder\vendor\conemu-maximus5\ConEmu\Scripts;C:\install\cmder\vendor\conemu-maximus5;C:\install\cmder\vendor\conemu-maximus5\ConEmu;C:\Program Files\Docker\Docker\Resources\bin;C:\install\Python27;C:\install\Python27\Scripts;C:\install\Python37\Scripts;C:\install\Python37;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0;C:\WINDOWS\System32\OpenSSH;C:\install\nodejs;C:\install\cmder;C:\install\subl;C:\install\VSCode-insider\bin;C:\install\calibre;C:\install\cmake\bin;C:\install\go\bin;C:\install\graphviz-2.38\bin;C:\install\Tower;C:\cygwin64\bin;C:\cygwin64;C:\ProgramData\chocolatey\bin;C:\install\lxrunoffline;D:\Chrome\install\texlive\bin\win32;D:\Chrome\install\android-sdk\platform-tools;D:\Chrome\nox\Nox\bin;C:\install\nirsoft;C:\Program Files\dotnet;C:\Program Files\Microsoft SQL Server\130\Tools\Binn;C:\Program Files (x86)\Microsoft SQL Server\100\Tools\Binn;C:\Program Files\Microsoft SQL Server\100\Tools\Binn;C:\Program Files\Microsoft SQL Server\100\DTS\Binn;C:\Users\me\AppData\Roaming\Composer\vendor\bin;C:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\IDE;C:\install\nodejs;C:\Program Files (x86)\Common Files\GTK\2.0\bin;C:\Windows\Microsoft.NET\Framework\v4.0.30319;C:\install\Java\jre1.8.0\bin;C:\install\Java\jdk-11.0.1\bin;C:\install\Meld\Scripts;C:\install\idea\bin;C:\install\CodeCompare;C:\install\cloc;C:\Program Files (x86)\Windows Kits\10\Windows Performance Toolkit;C:\install\Git\cmd;D:\z3\z3-4.8.1-win\bin;C:\install\ctags58;C:\Program Files (x86)\Microsoft Pex\bin;C:\install\ffmpeg\bin;C:\install\gdrive;C:\Users\me\AppData\Local\Microsoft\WindowsApps;C:\Users\me\AppData\Roaming\npm;C:\Users\me\.dotnet\tools;C:\Users\me\AppData\Local\Programs\radare2;C:\install\heroku\bin"/>
<envVar name="CLRMONITOR_INSTRUMENT_ASSEMBLIES_EXCLUSIONS" value="Microsoft.VisualBasic"/>
<envVar name="WINDIR" value="C:\WINDOWS"/>
<envVar name="ConEmuDrive" value="C:"/>
<envVar name="PSModulePath" value="C:\Program Files\WindowsPowerShell\Modules;C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules"/>
<envVar name="PROCESSOR_REVISION" value="9e09"/>
<envVar name="ChocolateyInstall" value="C:\ProgramData\chocolatey"/>
<envVar name="APPDATA" value="C:\Users\me\AppData\Roaming"/>
<envVar name="pex_appdir" value="C:\Program Files (x86)\Microsoft Pex\bin"/>
<envVar name="FPS_BROWSER_APP_PROFILE_STRING" value="Internet Explorer"/>
<envVar name="CLRMONITOR_INSTRUMENT_TYPES" value="System.Array,System.Array+ArrayEnumerator,System.Array+FunctorComparer`1,System.Array+SZArrayEnumerator,System.Array+SorterGenericArray,System.Array+SorterObjectArray,System.Boolean,System.Byte,System.Char,System.CharEnumerator,System.ComponentModel.Component,System.ComponentModel.Container,System.ComponentModel.Container+Site,System.Convert,System.Currency,System.DateTime,System.Decimal,System.Diagnostics.Assert,System.Double,System.Globalization.CharUnicodeInfo,System.Globalization.CultureTableRecord,System.Globalization.TextInfo,System.Guid,System.IO.MemoryStream,System.IO.Stream,System.IO.StreamReader,System.IO.StreamWriter,System.IO.StringReader,System.IO.StringWriter,System.Int16,System.Int32,System.Int64,System.Lazy`1,System.Lazy`1+Boxed,System.Lazy`1+LazyInternalExceptionHolder,System.Linq.Expressions.ExpressionCompiler,System.Math,System.Nullable,System.Nullable`1,System.OrdinalComparer,System.SByte,System.SZArrayHelper,System.SZArrayHelper+SZGenericArrayEnumerator`1,System.Single,System.String,System.StringComparer,System.Text.ASCIIEncoding,System.Text.DecoderNLS,System.Text.Encoding,System.Text.UTF8Encoding,System.TimeSpan,System.Tuple,System.Tuple`1,System.Tuple`2,System.Tuple`3,System.Tuple`4,System.Tuple`5,System.Tuple`6,System.Tuple`7,System.Tuple`8,System.UInt16,System.UInt32,System.UInt64,System.Xml.XmlTextWriter,System.Xml.XmlTextWriter+Namespace,System.Xml.XmlTextWriter+NamespaceState,System.Xml.XmlTextWriter+SpecialAttr,System.Xml.XmlTextWriter+State,System.Xml.XmlTextWriter+TagInfo,System.Xml.XmlTextWriter+Token,System.Xml.XmlWriter,System.Xml.XmlWriter+&lt;WriteAttributeStringAsyncHelper&gt;d__82,System.Xml.XmlWriter+&lt;WriteAttributesAsync&gt;d__102,System.Xml.XmlWriter+&lt;WriteElementStringAsync&gt;d__107,System.Xml.XmlWriter+&lt;WriteLocalNamespacesAsync&gt;d__108,System.Xml.XmlWriter+&lt;WriteNodeAsync&gt;d__106,System.Xml.XmlWriter+&lt;WriteNodeAsync_CallAsyncReader&gt;d__105,System.Xml.XmlWriter+&lt;WriteNodeAsync_CallSyncReader&gt;d__104,System.Xml.XmlWriter+&lt;WriteQualifiedNameAsync&gt;d__101,__Box`1,__SzArrayHelper`1"/>
<envVar name="COMPUTERNAME" value="YOGA15"/>
<envVar name="chromeopt" value="--ignore-certificate-errors --purge-memory-button    --emphasize-titles-in-omnibox-dropdown --enable-app-window-cycling --enable-bookmark-reordering --enable-browser-side-navigation --enable-cast-receiver --enable-dom-distiller --enable-distillability-service  --enable-file-manager-touch-mode  --enable-local-file-accesses --enable-longpress-drag-selection  --enable-password-generation --enable-picture-in-picture  --enable-pinch --enable-power-overlay --enable-reader-mode-toolbar-icon --enable-spatial-navigation --enable-tablet-splitview --enable-touch-calibration-setting --enable-touch-drag-drop --enable-touchview  --enable-web-notification-custom-layouts  --enable-zip-archiver-on-file-manager  --material-hybrid  --reader-mode-heuristics --top-chrome-md --windows10-custom-titlebar  "/>
<envVar name="CLRMONITOR_INJECT_ASSEMBLIES" value=""/>
<envVar name="TEMP" value="C:\cygwin64\tmp"/>
<envVar name="CommonProgramFiles(x86)" value="C:\Program Files (x86)\Common Files"/>
<envVar name="EXECIGNORE" value="*.dll"/>
<envVar name="FPS_BROWSER_USER_PROFILE_STRING" value="Default"/>
<envVar name="CLRMONITOR_INSTRUMENT_NAMESPACES_EXCLUSIONS" value=""/>
<envVar name="ConEmuBuild" value="180528"/>
<envVar name="ChocolateyLastPathUpdate" value="Mon Aug 20 09:30:38 2018"/>
<envVar name="CLRMONITOR_ERASE_CCTOR_TYPES" value=""/>
<envVar name="PROCESSOR_LEVEL" value="6"/>
<envVar name="ProgramData" value="C:\ProgramData"/>
<envVar name="HOMEDRIVE" value="C:"/>
<envVar name="CLRMONITOR_INJECT_TYPES" value=""/>
<envVar name="CLRMONITOR_ERASE_FINALIZER_TYPES" value=""/>
<envVar name="PROGRAMFILES" value="C:\Program Files (x86)"/>
<envVar name="OLDPWD" value="/cygdrive/d/MultiLearnerPrecondition/learners"/>
<envVar name="USERDOMAIN_ROAMINGPROFILE" value="YOGA15"/>
<envVar name="PROCESSOR_IDENTIFIER" value="Intel64 Family 6 Model 158 Stepping 9, GenuineIntel"/>
<envVar name="ConEmuWorkDrive" value="C:"/>
<envVar name="CLRMONITOR_INSTRUMENT_TYPES_EXCLUSIONS" value=""/>
<envVar name="ChocolateyToolsLocation" value="C:\tools"/>
<envVar name="CLRMONITOR_INSTRUMENT_ATTRIBUTE" value="Microsoft.Moles.Framework.Moles.MolesInstrumentAttribute"/>
<envVar name="TMP" value="C:\cygwin64\tmp"/>
<envVar name="PRINTER" value="Brother HL-L2340D series Printer"/>
<envVar name="CodeContractsInstallDir" value="c:\Program Files (x86)\Microsoft\Contracts\"/>
<envVar name="HOSTNAME" value="Yoga15"/>
<envVar name="ConEmuANSI" value="ON"/>
<envVar name="ConEmuBaseDirShort" value="C:\install\cmder\vendor\conemu-maximus5\ConEmu"/>
<envVar name="CLRMONITOR_SUBSTITUTIONS" value="C:\WINDOWS\assembly\GAC_MSIL\Microsoft.ExtendedReflection\0.94.0.0__31bf3856ad364e35\Microsoft.ExtendedReflection.dll,C:\WINDOWS\assembly\GAC_MSIL\Microsoft.Pex.Linq\0.94.0.0__31bf3856ad364e35\Microsoft.Pex.Linq.dll"/>
<envVar name="USERDOMAIN" value="YOGA15"/>
<envVar name="NUMBER_OF_PROCESSORS" value="8"/>
<envVar name="PS1" value="\[\e]0;\w\a\]\n\[\e[32m\]\u@\h \[\e[33m\]\w\[\e[0m\]\n\$ "/>
<envVar name="ConEmuWorkDir" value="C:\Users\me"/>
<envVar name="SYSTEMDRIVE" value="C:"/>
<envVar name="PWD" value="/cygdrive/d/MultiLearnerPrecondition"/>
<envVar name="pex_instrumentation" value="1"/>
<envVar name="DriverData" value="C:\Windows\System32\Drivers\DriverData"/>
<envVar name="COMMONPROGRAMFILES" value="C:\Program Files (x86)\Common Files"/>
<envVar name="HOMEPATH" value="\Users\me"/>
<envVar name="JAVA_OPTS" value="-Xlint:none"/>
<envVar name="CLRMONITOR_CLSID" value="{21bbb412-71ac-41f9-a377-48529a4859cf}"/>
<envVar name="HOME" value="C:\Users\me"/>
<envVar name="GIT_LFS_PATH" value="C:\install\GitLFS"/>
<envVar name="PROCESSOR_ARCHITEW6432" value="AMD64"/>
<envVar name="ConEmuBackHWND" value="0x00031440"/>
<envVar name="ConEmuDrawHWND" value="0x00021494"/>
<envVar name="PROFILEREAD" value="true"/>
<envVar name="ConEmuHooks" value="Enabled"/>
<envVar name="PYTHONOPATH" value="D:\z3\z3-4.8.1-win\bin\python"/>
</envVars>
</environment>
<settings/>
<reflection/>
<assembly name="DataStructuresTest" version="1.0.0.0" fileVersion="1.0.0.0" fullName="DataStructuresTest, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" location="D:\MultiLearnerPrecondition\BenchmarksAll\DataStructures\DataStructuresTest\bin\Debug\DataStructuresTest.dll" fileName="DataStructuresTest.dll" testProject="tests\datastructurestest.csproj"><settings testFramework="VisualStudioUnitTest"/>
<fixture name="ArrayListTest" type="DataStructures.Test.ArrayListTest" typeName="ArrayListTest" token="2000002" href="fix\DataStructuresTest.102.html"><type spec="Class"><definition assemblyName="DataStructuresTest" name="ArrayListTest" token="2000002" namespace="DataStructures.Test"/>
</type>
<settings typeUnderTest="DataStructures.ArrayList"/>
<exploration shortName="PUT_CommutativityAddContains(ArrayList, Int32, Int32)" fullName="DataStructures.Test.ArrayListTest.PUT_CommutativityAddContains(ArrayList, Int32, Int32)"><method><definition assemblyName="DataStructuresTest" name="PUT_CommutativityAddContains" token="6000002"><declaringType assemblyName="DataStructuresTest" name="ArrayListTest" token="2000002" namespace="DataStructures.Test"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DataStructuresTest" name="ArrayListTest" token="2000002" namespace="DataStructures.Test"/>
</type>
</parameter>
<parameter name="s1" position="1"><type spec="Class"><definition assemblyName="DataStructures" name="ArrayList" token="2000002" namespace="DataStructures"/>
</type>
</parameter>
<parameter name="x" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fb" namespace="System"/>
</type>
</parameter>
<parameter name="y" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fb" namespace="System"/>
</type>
</parameter>
</definition>
</method>
<memberUnderTest assemblyName="DataStructures" name=".ctor" token="6000004"><declaringType assemblyName="DataStructures" name="ArrayList" token="2000002" namespace="DataStructures"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DataStructures" name="ArrayList" token="2000002" namespace="DataStructures"/>
</type>
</parameter>
<parameter name="c" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ICollection" token="200046d" namespace="System.Collections"/>
</type>
</parameter>
</memberUnderTest>
<memberUnderTest assemblyName="DataStructures" name="Count" token="17000002"><declaringType assemblyName="DataStructures" name="ArrayList" token="2000002" namespace="DataStructures"/>
<propertyType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fb" namespace="System"/>
</propertyType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DataStructures" name="ArrayList" token="2000002" namespace="DataStructures"/>
</type>
</parameter>
</memberUnderTest>
<memberUnderTest assemblyName="DataStructures" name="IndexOf" token="600001f"><declaringType assemblyName="DataStructures" name="ArrayList" token="2000002" namespace="DataStructures"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DataStructures" name="ArrayList" token="2000002" namespace="DataStructures"/>
</type>
</parameter>
<parameter name="value" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="200003d" namespace="System"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fb" namespace="System"/>
</resultType>
</memberUnderTest>
<memberUnderTest assemblyName="DataStructures" name="LastIndexOf" token="6000024"><declaringType assemblyName="DataStructures" name="ArrayList" token="2000002" namespace="DataStructures"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DataStructures" name="ArrayList" token="2000002" namespace="DataStructures"/>
</type>
</parameter>
<parameter name="value" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="200003d" namespace="System"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fb" namespace="System"/>
</resultType>
</memberUnderTest>
<memberUnderTest assemblyName="DataStructures" name="Contains" token="6000016"><declaringType assemblyName="DataStructures" name="ArrayList" token="2000002" namespace="DataStructures"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DataStructures" name="ArrayList" token="2000002" namespace="DataStructures"/>
</type>
</parameter>
<parameter name="item" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="200003d" namespace="System"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="20000b2" namespace="System"/>
</resultType>
</memberUnderTest>
<memberUnderTest assemblyName="DataStructures" name="Add" token="600000f"><declaringType assemblyName="DataStructures" name="ArrayList" token="2000002" namespace="DataStructures"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DataStructures" name="ArrayList" token="2000002" namespace="DataStructures"/>
</type>
</parameter>
<parameter name="value" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="200003d" namespace="System"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fb" namespace="System"/>
</resultType>
</memberUnderTest>
<log level="message" time="2018-12-13 18:27:35Z" category="symbols" message="could not load symbols for C:\WINDOWS\assembly\GAC_MSIL\Microsoft.Pex\0.94.0.0__31bf3856ad364e35\Microsoft.Pex.exe"/>
<log level="message" time="2018-12-13 18:27:35Z" category="symbols" message="search path: ;"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.09"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.17"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.02"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.02"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<log level="message" time="2018-12-13 18:27:35Z" category="symbols" message="could not load symbols for C:\WINDOWS\assembly\GAC_MSIL\Microsoft.Pex.Framework\0.94.0.0__31bf3856ad364e35\Microsoft.Pex.Framework.dll"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.15"/>
<generatedTest id="0911182e-72c7-418b-8e1d-f89f667d0a24" index="1" run="7" exceptionState="unexpected" status="exception" failed="true" failureWikiTopic="Assertion Violation" generated="true" new="true" assemblyName="DataStructuresTest" name="PUT_CommutativityAddContainsThrowsPexAssertFailedException27"><declaringType assemblyName="DataStructuresTest" name="ArrayListTest" token="ffffffff" namespace="DataStructures.Test"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DataStructuresTest" name="ArrayListTest" token="ffffffff" namespace="DataStructures.Test"/>
</type>
</parameter>
<rcov name="Block" dcov="41" dtot="83" acov="41" atot="83"/>
<rcov name="asserts" dcov="1" dtot="1" acov="1" atot="1"/>
<value name="s1">Count = 0</value>
<value name="x">0</value>
<value name="y">0</value>
<value name="$input_s1.Count">0</value>
<value name="$input_x">0</value>
<value name="$input_y">0</value>
<value name="$input_s1.IndexOf(x)">-1</value>
<value name="$input_s1.IndexOf(y)">-1</value>
<value name="$input_s1.LastIndexOf(x)">-1</value>
<value name="$input_s1.LastIndexOf(y)">-1</value>
<value name="$input_s1.Contains(x)">false</value>
<value name="$input_s1.Contains(y)">false</value>
<code><![CDATA[ArrayList arrayList;
int[] ints = new int[0];
arrayList = ArrayListFactory.Create(ints);
this.PUT_CommutativityAddContains(arrayList, 0, 0);
]]></code>
<methodCode imports="DataStructures;DataStructures.Test.Factories;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated;Microsoft.Pex.Framework.Exceptions"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(ArrayListTest))]
[PexRaisedException(typeof(PexAssertFailedException))]
public void PUT_CommutativityAddContainsThrowsPexAssertFailedException27()
{
    ArrayList arrayList;
    int[] ints = new int[0];
    arrayList = ArrayListFactory.Create(ints);
    this.PUT_CommutativityAddContains(arrayList, 0, 0);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DataStructuresTest" location="D:\MultiLearnerPrecondition\BenchmarksAll\DataStructures\DataStructuresTest\bin\Debug\DataStructuresTest.dll"/>
<reference name="DataStructures" location="D:\MultiLearnerPrecondition\BenchmarksAll\DataStructures\DataStructuresTest\bin\Debug\DataStructures.dll"/>
<exceptionChain><exception typeDisplayName="PexAssertFailedException" source="Microsoft.Pex.Framework"><message><![CDATA[Expected true, got false]]></message>
<type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexAssertFailedException" token="20001df" namespace="Microsoft.Pex.Framework.Exceptions"/>
</type>
<stackTrace><frame value="  at ArrayListTest.PUT_CommutativityAddContains(ArrayList, Int32, Int32) in d:\MultiLearnerPrecondition\BenchmarksAll\DataStructures\DataStructuresTest\ArrayListTest.cs(98)" method="ArrayListTest.PUT_CommutativityAddContains(ArrayList, Int32, Int32)" offset="326" file="d:\MultiLearnerPrecondition\BenchmarksAll\DataStructures\DataStructuresTest\ArrayListTest.cs" line="98"><method assemblyName="DataStructuresTest" name="PUT_CommutativityAddContains" token="6000002"><declaringType assemblyName="DataStructuresTest" name="ArrayListTest" token="2000002" namespace="DataStructures.Test"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DataStructuresTest" name="ArrayListTest" token="2000002" namespace="DataStructures.Test"/>
</type>
</parameter>
<parameter name="s1" position="1"><type spec="Class"><definition assemblyName="DataStructures" name="ArrayList" token="2000002" namespace="DataStructures"/>
</type>
</parameter>
<parameter name="x" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fb" namespace="System"/>
</type>
</parameter>
<parameter name="y" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fb" namespace="System"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[

            //NotpAssume.IsTrue(a1 == a2 && ad1 == ad2 && eq.Equals(s1, s2));]]></beforeSource>
<source><![CDATA[            PexAssert.IsTrue(a1 == a2 && ad1 == ad2 && eq.Equals(s1, s2));]]></source>
<afterSource><![CDATA[        }

        //[PexMethod(TestEmissionFilter = PexTestEmissionFilter.All)]]]></afterSource>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<pathCondition><![CDATA[ArrayList s2 = new;
object[] s3 = new;
ArrayList s4 = new;
object[] s1 = s1 == s2 ? s3 : s1 == s4 ? (object[])s4 : s1._items;
object[] s0 = s1;
int s5 = s1 == s2 ? 0 : s1 == s4 ? 0 : s1._size;
return elems != (int[])null && elems.Length < 1 && -1 < 2 + elems.Length && s1 != (ArrayList)null && -11 < x && x < 11 && 
                                                                                                                -11 < y && y < 11 && s0 != (object[])null && s0.Length != 0 && s0.GetType().GetElementType().IsAssignableFrom(typeof(int)) && x == y && methodof(s1.get_Count) == methodof(ArrayList.get_Count) && 
                                                                                                                                                                                                                                                        s5 == 0 && methodof(s1.get_Count) == methodof(ArrayList.get_Count) && methodof(s1.IndexOf) == methodof(ArrayList.IndexOf) && methodof(s1.LastIndexOf) == methodof(ArrayList.LastIndexOf) && 
                                                                                                                                                                                                                                                                                                                                                                                     methodof(s1.LastIndexOf) == methodof(ArrayList.LastIndexOf) && methodof(s1.Contains) == methodof(ArrayList.Contains) && methodof(s1.Add) == methodof(ArrayList.Add);
]]></pathCondition>
</generatedTest>
<log level="message" time="2018-12-13 18:27:36Z" category="coverage" message="coverage increased from 0 to 41 blocks (+41) after flipping DataStructures.ArrayList..ctor at 0x0011"/>
<log level="message" time="2018-12-13 18:27:36Z" category="symbols" message="could not load symbols for C:\WINDOWS\assembly\GAC_MSIL\Microsoft.ExtendedReflection\0.94.0.0__31bf3856ad364e35\Microsoft.ExtendedReflection.dll"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<log level="warning" time="2018-12-13 18:27:36Z" wikiTopic="Pex Needs Help To Find Types" category="domains" message="do not know any type assignable to System.Array; Pex needs help to find types"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.01"/>
<generatedTest id="7ca7adf8-214d-4e4f-b5da-735fea11bd56" index="2" run="9" status="normaltermination" generated="true" new="true" assemblyName="DataStructuresTest" name="PUT_CommutativityAddContains153"><declaringType assemblyName="DataStructuresTest" name="ArrayListTest" token="ffffffff" namespace="DataStructures.Test"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DataStructuresTest" name="ArrayListTest" token="ffffffff" namespace="DataStructures.Test"/>
</type>
</parameter>
<rcov name="Block" dcov="17" dtot="23" acov="58" atot="106"/>
<rcov name="asserts" dcov="0" dtot="0" acov="1" atot="1"/>
<value name="s1">Count = 0</value>
<value name="x">8</value>
<value name="y">9</value>
<value name="$input_s1.Count">0</value>
<value name="$input_x">8</value>
<value name="$input_y">9</value>
<value name="$input_s1.IndexOf(x)">-1</value>
<value name="$input_s1.IndexOf(y)">-1</value>
<value name="$input_s1.LastIndexOf(x)">-1</value>
<value name="$input_s1.LastIndexOf(y)">-1</value>
<value name="$input_s1.Contains(x)">false</value>
<value name="$input_s1.Contains(y)">false</value>
<value name="result(s1)">Count = 1</value>
<code><![CDATA[ArrayList arrayList;
int[] ints = new int[0];
arrayList = ArrayListFactory.Create(ints);
this.PUT_CommutativityAddContains(arrayList, 8, 9);
Assert.IsNotNull((object)arrayList);
]]></code>
<methodCode imports="DataStructures;DataStructures.Test.Factories;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(ArrayListTest))]
public void PUT_CommutativityAddContains153()
{
    ArrayList arrayList;
    int[] ints = new int[0];
    arrayList = ArrayListFactory.Create(ints);
    this.PUT_CommutativityAddContains(arrayList, 8, 9);
    Assert.IsNotNull((object)arrayList);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DataStructuresTest" location="D:\MultiLearnerPrecondition\BenchmarksAll\DataStructures\DataStructuresTest\bin\Debug\DataStructuresTest.dll"/>
<reference name="DataStructures" location="D:\MultiLearnerPrecondition\BenchmarksAll\DataStructures\DataStructuresTest\bin\Debug\DataStructures.dll"/>
<pathCondition><![CDATA[ArrayList s2 = new;
object[] s3 = new;
ArrayList s4 = new;
object[] s1 = s1 == s2 ? s3 : s1 == s4 ? (object[])s4 : s1._items;
object[] s0 = s1;
object[] s7 = new;
object[] s6 = s1 == s2 ? s3 : s1 == s4 ? s7 : s1._items;
object[] s5 = s6;
int s10 = new;
object[] s12 = s0 == (object[])s4 ? {null} : s0 == s3 ? {null} : s0;
int s13 = new;
object[] s14 = s5 == (object[])s4 ? {null} : s5 == s3 ? {null} : s5;
object[] s11 = s5 == s0 ? s12{[unchecked(0)] = s13} : s14;
object[] s9 = s5 == s7 ? {null}{[unchecked(0)] = s10} : s11;
object s8 = s9[0];
int s16 = new;
int s17 = new;
int s18 = new;
int s19 = new;
int s20 = new;
int s15 = s8 == (object)s16 ? y : s8 == (object)s13 ? x : s8 == (object)s4 ?
                                                            y : s8 == (object)s7 ? x : s8 == (object)s3 ? x : s8 == (object)s17 ? y : s8 == (object)s18 ? x : s8 == (object)s19 ? y : s8 == (object)s10 ? x : s8 == (object)s20 ? y : s8.Value;
int s21 = s1 == s2 ? 0 : s1 == s4 ? 0 : s1._size;
return elems != (int[])null && elems.Length < 1 && -1 < 2 + elems.Length && s1 != (ArrayList)null && -11 < x && x < 11 && 
                                                                                                                -11 < y && y < 11 && s0 != (object[])null && s0.Length != 0 && s0.GetType().GetElementType().IsAssignableFrom(typeof(int)) && s5 != (object[])null && s5.Length != 0 && s8 != (object)null && 
                                                                                                                                                                                                                                                                                        s15 == x && methodof(s1.get_Count) == methodof(ArrayList.get_Count) && s21 == 0 && methodof(s1.get_Count) == methodof(ArrayList.get_Count) && methodof(s1.IndexOf) == methodof(ArrayList.IndexOf) && 
                                                                                                                                                                                                                                                                                                                                                                                                                                      methodof(s1.LastIndexOf) == methodof(ArrayList.LastIndexOf) && methodof(s1.LastIndexOf) == methodof(ArrayList.LastIndexOf) && methodof(s1.Contains) == methodof(ArrayList.Contains) && 
methodof(s1.Add) == methodof(ArrayList.Add) && x != y && methodof(s1.get_Item) == methodof(ArrayList.get_Item) && methodof(s8.Equals) == methodof(int.Equals);
]]></pathCondition>
</generatedTest>
<log level="message" time="2018-12-13 18:27:36Z" category="coverage" message="coverage increased from 41 to 58 blocks (+17) after flipping DataStructures.ArrayList.Contains at 0x0062"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.01"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.01"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.01"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.01"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.01"/>
<generatedTest id="a37b47e9-09f4-4b78-a223-22fb2efa3214" index="3" run="25" status="normaltermination" generated="true" new="true" assemblyName="DataStructuresTest" name="PUT_CommutativityAddContains668"><declaringType assemblyName="DataStructuresTest" name="ArrayListTest" token="ffffffff" namespace="DataStructures.Test"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DataStructuresTest" name="ArrayListTest" token="ffffffff" namespace="DataStructures.Test"/>
</type>
</parameter>
<rcov name="Block" dcov="29" dtot="28" acov="87" atot="134"/>
<rcov name="asserts" dcov="0" dtot="0" acov="1" atot="1"/>
<value name="s1">Count = 1</value>
<value name="x">2</value>
<value name="y">2</value>
<value name="$input_s1.Count">1</value>
<value name="$input_x">2</value>
<value name="$input_y">2</value>
<value name="$input_s1.IndexOf(x)">0</value>
<value name="$input_s1.IndexOf(y)">0</value>
<value name="$input_s1.LastIndexOf(x)">0</value>
<value name="$input_s1.LastIndexOf(y)">0</value>
<value name="$input_s1.Contains(x)">true</value>
<value name="$input_s1.Contains(y)">true</value>
<value name="result(s1)">Count = 2</value>
<code><![CDATA[ArrayList arrayList;
int[] ints = new int[1];
ints[0] = 2;
arrayList = ArrayListFactory.Create(ints);
this.PUT_CommutativityAddContains(arrayList, 2, 2);
Assert.IsNotNull((object)arrayList);
]]></code>
<methodCode imports="DataStructures;DataStructures.Test.Factories;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(ArrayListTest))]
public void PUT_CommutativityAddContains668()
{
    ArrayList arrayList;
    int[] ints = new int[1];
    ints[0] = 2;
    arrayList = ArrayListFactory.Create(ints);
    this.PUT_CommutativityAddContains(arrayList, 2, 2);
    Assert.IsNotNull((object)arrayList);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DataStructuresTest" location="D:\MultiLearnerPrecondition\BenchmarksAll\DataStructures\DataStructuresTest\bin\Debug\DataStructuresTest.dll"/>
<reference name="DataStructures" location="D:\MultiLearnerPrecondition\BenchmarksAll\DataStructures\DataStructuresTest\bin\Debug\DataStructures.dll"/>
<pathCondition><![CDATA[ArrayList s2 = new;
object[] s3 = new;
ArrayList s4 = new;
object[] s1 = s1 == s2 ? s3 : s1 == s4 ? (object[])s4 : s1._items;
object[] s0 = s1;
int s6 = s1 == s2 ? 1 : s1 == s4 ? 1 : s1._size;
int s5 = s6;
object[] s12 = new;
object[] s11 = s0 == (object[])s4 ? {null} : s0 == s3 ? {null}{[unchecked(0)] = s3} : s0 == s12 ? {null} : s0;
object[] s10 = s11;
object[] s9 = s0 == (object[])s4 ? s10 : s0 == s3 ? {null}{[unchecked(0)] = s3} : s0 == s12 ? s10 : s0;
object[] s8 = s9;
object s7 = s8[0];
int s13 = s7 == (object)s4 ? x : s7 == (object)s3 ? elems[0] : s7.Value;
int s14 = s7 == (object)s4 ? x : s7 == (object)s12 ? y : s7 == (object)s3 ? elems[0] : s7.Value;
int s16 = new;
int s17 = s8[-1 + s5].Value;
int s15 = s8[-1 + s5] == (object)s4 ? x : s8[-1 + s5] == (object)s16 ? x : s8[-1 + s5] == (object)s12 ? y : s8[-1 + s5] == (object)s3 ? elems[0] : s17;
int s19 = new;
int s18 = s8[-1 + s5] == (object)s16 ? x : s8[-1 + s5] == (object)s12 ? y : s8[-1 + s5] == (object)s3 ? elems[0] : s8[-1 + s5] == (object)s19 ? y : s8[-1 + s5] == (object)s4 ? x : s17;
int s21 = new;
int s20 = s7 == (object)s16 ? x : s7 == (object)s12 ? y : s7 == (object)s3 ? elems[0] : s7 == (object)s4 ? x : s7 == (object)s19 ? y : s7 == (object)s21 ? x : s7.Value;
int s23 = new;
int s22 = s7 == (object)s16 ? x : s7 == (object)s12 ? y : s7 == (object)s3 ? elems[0] : s7 == (object)s23 ? y : s7 == (object)s4 ? x : s7 == (object)s19 ? y : s7 == (object)s21 ? x : s7.Value;
int s26 = new;
int s25 = -s5 == 0 ? s26 : s7;
int s24 = s25;
int s28 = new;
int s27 = s24 == s26 ? x : s24 == s23 ? y : s24 == s4 ? x : s24 == s16 ? x : s24 == s12 ? y : s24 == s3 ? elems[0] : s24 == s28 ? y : s24 == s19 ? y : s24 == s21 ? x : s24.Value;
object[] s30 = s4 == (ArrayList)s0 ? __move(__move(s8, s5){[unchecked(0)] = s26}, -s5) : s10;
object s29 = s30[0];
int s32 = new;
int s31 = s29 == (object)s26 ? x : s29 == (object)s23 ? y : s29 == (object)s4 ? x : s29 == (object)s12 ?
                                                                                      y : s29 == (object)s3 ? elems[0] : s29 == (object)s28 ? y : s29 == (object)s19 ? y : s29 == (object)s21 ? x : s29 == (object)s32 ? y : s29 == (object)s16 ? x : s29.Value;
int s34 = s1 == s2 ? 1 : s1 == s4 ? 0 : s1._size;
int s33 = s34;
object[] s36 = s1 == s2 ? s3 : s1 == s4 ? (object[])s16 : s1._items;
object[] s35 = s36;
map<int, object> s41 = __move(__move(s8, unchecked(1)){[unchecked(0)] = s26}, unchecked(-1));
map<int, object> s40 = s4 == (ArrayList)s0 ? s41 : s10;
int s42 = new;
object[] s45 = s35 == (object[])s4 ? s10 : s35 == s3 ? {null}{[unchecked(0)] = s3} : s35 == s12 ? s10 : s35;
object[] s44 = s45;
map<int, object> s43 = s35 == s0 ? s41 : s44;
map<int, object> s39 = s35 == (object[])s16 ? __move(__move(s40, s33){[unchecked(0)] = s42}, -s33) : s43;
map<int, object> s38 = s39;
object s37 = s38[0];
int s47 = -s33 == 0 ? s42 : s10[0];
int s46 = s47;
int s48 = s37 == (object)s26 ? x : s37 == (object)s23 ? y : s37 == (object)s42 ? x : s37 == (object)s4 ? x : s37 == (object)s12 ?
                                                                                                               y : s37 == (object)s3 ? elems[0] : s37 == (object)s28 ? y : s37 == (object)s19 ? y : s37 == (object)s21 ? x : s37 == (object)s32 ? y : s37 == (object)s16 ? x : s37.Value;
int s49 = s46 == s26 ?
            x : s46 == s23 ? y : s46 == s42 ? x : s46 == s4 ? x : s46 == s12 ? y : s46 == s3 ? elems[0] : s46 == s28 ? y : s46 == s19 ? y : s46 == s21 ? x : s46 == s32 ? y : s46 == s16 ? x : s46.Value;
int s51 = 1 - s33 == 0 ? s42 : s10[1];
int s50 = s51;
int s52 = s38[1] == (object)s26 ? x : s38[1] == (object)s23 ? y : s38[1] == (object)s42 ? x : s38[1] == (object)s4 ? x : s38[1] == (object)s12 ? y : s38[1] == (object)s3 ?
                                                                                                                                                       elems[0] : s38[1] == (object)s28 ? y : s38[1] == (object)s19 ? y : s38[1] == (object)s21 ? x : s38[1] == (object)s32 ? y : s38[1] == (object)s16 ? x : s38[1].Value;
int s53 = s50 == s26 ?
            x : s50 == s23 ? y : s50 == s42 ? x : s50 == s4 ? x : s50 == s12 ? y : s50 == s3 ? elems[0] : s50 == s28 ? y : s50 == s19 ? y : s50 == s21 ? x : s50 == s32 ? y : s50 == s16 ? x : s50.Value;
int s55 = s1 == s2 ? 1 : s1 == s4 ? s33 : s1._size;
int s54 = s55;
int s56 = -s54 == 0 ? s26 : s7;
map<int, object> s59 = __move(__move(s8, s54){[unchecked(0)] = s26}, -s54);
map<int, object> s58 = s4 == (ArrayList)s0 ? s59 : s10;
map<int, object> s57 = s58;
map<int, object> s62 = s35 == s0 ? s59 : s44;
map<int, object> s61 = s35 == (object[])s16 ? __move(__move(s57, s33){[unchecked(0)] = s42}, -s33) : s62;
map<int, object> s60 = s61;
return elems != (int[])null && 
       -11 < elems[0] && elems[0] < 11 && s1 != (ArrayList)null && s0 != (object[])null && 0 < s0.Length && -11 < x && x < 11 && -11 < y && y < 11 && s0.Length >= s5 && 0 < s5 && s7 != (object)null && 
                                                                                                                                                                                   s13 == x && s14 == y && -1 < -1 + s5 && -1 + s5 < s5 && s0.Length != 0 && -1 + s5 < s0.Length && s8[-1 + s5] != (object)null && methodof(s8[-1 + s5].Equals) == methodof(int.Equals) && 
                                                                                                                                                                                                                                                                                                                   s15 == x && s18 == y && s20 == x && s22 == y && s5 != s0.Length && (uint)s5 < (uint)(s0.Length) && s0.GetType().GetElementType().IsAssignableFrom(typeof(int)) && 
                                                                                                                                                                                                                                                                                                                                                                                                                      s24 != null && methodof(s24.Equals) == methodof(int.Equals) && s27 == y && s29 != (object)null && methodof(s29.Equals) == methodof(int.Equals) && s31 == y && s33 == 1 && s35 != (object[])null && 
s37 != (object)null && methodof(s37.Equals) == methodof(int.Equals) && (s46 == null || s46 is int ? s46 : null) != null && s48 == s49 && 1 < s35.Length && 1 < 1 + s33 && 1u < (uint)(2 * s33) && 
s38[1] != (object)null && methodof(s38[1].Equals) == methodof(int.Equals) && (s50 == null || s50 is int ? s50 : null) != null && s52 == s53 && elems.Length == 1 && s54 == 1 && 
methodof(s1.get_Count) == methodof(ArrayList.get_Count) && methodof(s1.CopyTo) == methodof(ArrayList.CopyTo) && s0.Length >= s33 && methodof(s1.get_Count) == methodof(ArrayList.get_Count) && 
methodof(s1.IndexOf) == methodof(ArrayList.IndexOf) && s0.Length >= s54 && methodof(s7.Equals) == methodof(int.Equals) && methodof(s1.LastIndexOf) == methodof(ArrayList.LastIndexOf) && 
methodof(s1.LastIndexOf) == methodof(ArrayList.LastIndexOf) && methodof(s8[-1 + s54].Equals) == methodof(int.Equals) && methodof(s1.Contains) == methodof(ArrayList.Contains) && 
methodof(s1.Add) == methodof(ArrayList.Add) && s54 != s0.Length && methodof(s56.Equals) == methodof(int.Equals) && methodof(s57[0].Equals) == methodof(int.Equals) && 2 * s33 >= 1 + s33 && 
s33 >= s33 && 2 * s33 != s33 && methodof(s1.get_Item) == methodof(ArrayList.get_Item) && methodof(s60[0].Equals) == methodof(int.Equals) && methodof(s60[1].Equals) == methodof(int.Equals);
]]></pathCondition>
</generatedTest>
<log level="message" time="2018-12-13 18:27:38Z" category="coverage" message="coverage increased from 58 to 87 blocks (+29) after flipping DataStructures.ArrayList.Add at 0x0034"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.01"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.01"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.01"/>
<generatedTest id="3dcadfc3-3e2b-4240-b305-6ac9dc53e5e2" index="4" run="35" exceptionState="unexpected" status="exception" failed="true" failureWikiTopic="Assertion Violation" generated="true" new="true" assemblyName="DataStructuresTest" name="PUT_CommutativityAddContainsThrowsPexAssertFailedException471"><declaringType assemblyName="DataStructuresTest" name="ArrayListTest" token="ffffffff" namespace="DataStructures.Test"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DataStructuresTest" name="ArrayListTest" token="ffffffff" namespace="DataStructures.Test"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="87" atot="134"/>
<rcov name="asserts" dcov="0" dtot="0" acov="1" atot="1"/>
<value name="s1">Count = 1</value>
<value name="x">2</value>
<value name="y">2</value>
<value name="$input_s1.Count">1</value>
<value name="$input_x">2</value>
<value name="$input_y">2</value>
<value name="$input_s1.IndexOf(x)">-1</value>
<value name="$input_s1.IndexOf(y)">-1</value>
<value name="$input_s1.LastIndexOf(x)">-1</value>
<value name="$input_s1.LastIndexOf(y)">-1</value>
<value name="$input_s1.Contains(x)">false</value>
<value name="$input_s1.Contains(y)">false</value>
<code><![CDATA[ArrayList arrayList;
int[] ints = new int[1];
ints[0] = 10;
arrayList = ArrayListFactory.Create(ints);
this.PUT_CommutativityAddContains(arrayList, 2, 2);
]]></code>
<methodCode imports="DataStructures;DataStructures.Test.Factories;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated;Microsoft.Pex.Framework.Exceptions"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(ArrayListTest))]
[PexRaisedException(typeof(PexAssertFailedException))]
public void PUT_CommutativityAddContainsThrowsPexAssertFailedException471()
{
    ArrayList arrayList;
    int[] ints = new int[1];
    ints[0] = 10;
    arrayList = ArrayListFactory.Create(ints);
    this.PUT_CommutativityAddContains(arrayList, 2, 2);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DataStructuresTest" location="D:\MultiLearnerPrecondition\BenchmarksAll\DataStructures\DataStructuresTest\bin\Debug\DataStructuresTest.dll"/>
<reference name="DataStructures" location="D:\MultiLearnerPrecondition\BenchmarksAll\DataStructures\DataStructuresTest\bin\Debug\DataStructures.dll"/>
<exceptionChain><exception typeDisplayName="PexAssertFailedException" source="Microsoft.Pex.Framework"><message><![CDATA[Expected true, got false]]></message>
<type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexAssertFailedException" token="20001df" namespace="Microsoft.Pex.Framework.Exceptions"/>
</type>
<stackTrace><frame value="  at ArrayListTest.PUT_CommutativityAddContains(ArrayList, Int32, Int32) in d:\MultiLearnerPrecondition\BenchmarksAll\DataStructures\DataStructuresTest\ArrayListTest.cs(98)" method="ArrayListTest.PUT_CommutativityAddContains(ArrayList, Int32, Int32)" offset="326" file="d:\MultiLearnerPrecondition\BenchmarksAll\DataStructures\DataStructuresTest\ArrayListTest.cs" line="98"><method assemblyName="DataStructuresTest" name="PUT_CommutativityAddContains" token="6000002"><declaringType assemblyName="DataStructuresTest" name="ArrayListTest" token="2000002" namespace="DataStructures.Test"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DataStructuresTest" name="ArrayListTest" token="2000002" namespace="DataStructures.Test"/>
</type>
</parameter>
<parameter name="s1" position="1"><type spec="Class"><definition assemblyName="DataStructures" name="ArrayList" token="2000002" namespace="DataStructures"/>
</type>
</parameter>
<parameter name="x" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fb" namespace="System"/>
</type>
</parameter>
<parameter name="y" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fb" namespace="System"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[

            //NotpAssume.IsTrue(a1 == a2 && ad1 == ad2 && eq.Equals(s1, s2));]]></beforeSource>
<source><![CDATA[            PexAssert.IsTrue(a1 == a2 && ad1 == ad2 && eq.Equals(s1, s2));]]></source>
<afterSource><![CDATA[        }

        //[PexMethod(TestEmissionFilter = PexTestEmissionFilter.All)]]]></afterSource>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<pathCondition><![CDATA[ArrayList s2 = new;
object[] s3 = new;
ArrayList s4 = new;
object[] s1 = s1 == s2 ? s3 : s1 == s4 ? (object[])s4 : s1._items;
object[] s0 = s1;
object[] s11 = new;
object[] s10 = s0 == (object[])s4 ? {null} : s0 == s3 ? {null}{[unchecked(0)] = s3} : s0 == s11 ? {null} : s0;
object[] s9 = s10;
object[] s8 = s0 == (object[])s4 ? s9 : s0 == s3 ? {null}{[unchecked(0)] = s3} : s0 == s11 ? s9 : s0;
object[] s7 = s8;
object s6 = s7[0];
int s12 = new;
int s5 = s6 == (object)s4 ? x : s6 == (object)s12 ? x : s6 == (object)s11 ? y : s6 == (object)s3 ? elems[0] : s6.Value;
int s14 = new;
int s13 = s6 == (object)s12 ? x : s6 == (object)s11 ? y : s6 == (object)s3 ? elems[0] : s6 == (object)s14 ? y : s6 == (object)s4 ? x : s6.Value;
int s16 = new;
int s17 = new;
int s18 = new;
int s19 = new;
int s15 = s6 == (object)s16 ? x : s6 == (object)s17 ?
                                    y : s6 == (object)s4 ? x : s6 == (object)s12 ? x : s6 == (object)s11 ? y : s6 == (object)s3 ? elems[0] : s6 == (object)s18 ? y : s6 == (object)s14 ? y : s6 == (object)s19 ? x : s6.Value;
int s21 = new;
int s20 = s9[0] == (object)s16 ? x : s9[0] == (object)s17 ? y : s9[0] == (object)s4 ? x : s9[0] == (object)s11 ? y :
                                                                                                                   s9[0] == (object)s3 ? elems[0] : s9[0] == (object)s18 ? y : s9[0] == (object)s14 ? y : s9[0] == (object)s19 ? x : s9[0] == (object)s21 ? y : s9[0] == (object)s12 ? x : s9[0].Value;
int s22 = s1 == s2 ? 1 : s1 == s4 ? 1 : s1._size;
int s24 = s1 == s2 ? 1 : s1 == s4 ? 0 : s1._size;
int s23 = s24;
int s26 = s1 == s2 ? 1 : s1 == s4 ? s23 : s1._size;
int s25 = s26;
int s27 = s6 == (object)s4 ? x : s6 == (object)s3 ? elems[0] : s6.Value;
int s28 = s6 == (object)s4 ? x : s6 == (object)s11 ? y : s6 == (object)s3 ? elems[0] : s6.Value;
int s30 = s7[-1 + s25].Value;
int s29 = s7[-1 + s25] == (object)s4 ? x : s7[-1 + s25] == (object)s12 ? x : s7[-1 + s25] == (object)s11 ? y : s7[-1 + s25] == (object)s3 ? elems[0] : s30;
int s31 = s7[-1 + s25] == (object)s12 ? x : s7[-1 + s25] == (object)s11 ? y : s7[-1 + s25] == (object)s3 ? elems[0] : s7[-1 + s25] == (object)s14 ? y : s7[-1 + s25] == (object)s4 ? x : s30;
int s32 = s6 == (object)s12 ? x : s6 == (object)s11 ? y : s6 == (object)s3 ? elems[0] : s6 == (object)s4 ? x : s6 == (object)s14 ? y : s6 == (object)s19 ? x : s6.Value;
int s33 = s6 == (object)s12 ? x : s6 == (object)s11 ? y : s6 == (object)s3 ? elems[0] : s6 == (object)s17 ? y : s6 == (object)s4 ? x : s6 == (object)s14 ? y : s6 == (object)s19 ? x : s6.Value;
int s35 = -s25 == 0 ? s16 : s6;
int s34 = s35;
int s36 = s34 == s16 ? x : s34 == s17 ? y : s34 == s4 ? x : s34 == s12 ? x : s34 == s11 ? y : s34 == s3 ? elems[0] : s34 == s18 ? y : s34 == s14 ? y : s34 == s19 ? x : s34.Value;
int s37 = 1 - s25 == 0 ? s16 : s7[1];
object[] s39 = s4 == (ArrayList)s0 ? __move(__move(s7, s25){[unchecked(0)] = s16}, -s25) : s9;
object s38 = s39[0];
int s40 = s38 == (object)s16 ? x : s38 == (object)s17 ? y : s38 == (object)s4 ? x : s38 == (object)s11 ?
                                                                                      y : s38 == (object)s3 ? elems[0] : s38 == (object)s18 ? y : s38 == (object)s14 ? y : s38 == (object)s19 ? x : s38 == (object)s21 ? y : s38 == (object)s12 ? x : s38.Value;
return elems != (int[])null && -11 < elems[0] && elems[0] < 11 && s1 != (ArrayList)null && s0 != (object[])null && -11 < x && x < 11 && 
                                                                                                                              -11 < y && y < 11 && s5 != x && s13 != y && s0.GetType().GetElementType().IsAssignableFrom(typeof(int)) && s6 != (object)null && s15 != y && 1 < s0.Length && x == y && s9[0] != (object)null && 
                                                                                                                                                                                                                                                                                                      methodof(s9[0].Equals) == methodof(int.Equals) && s20 != y && s22 == 1 && elems.Length == 1 && s23 == 1 && s25 == 1 && methodof(s1.get_Count) == methodof(ArrayList.get_Count) && 
                                                                                                                                                                                                                                                                                                                                                                                                                             methodof(s1.CopyTo) == methodof(ArrayList.CopyTo) && s0.Length >= s23 && methodof(s1.get_Count) == methodof(ArrayList.get_Count) && methodof(s1.IndexOf) == methodof(ArrayList.IndexOf) && 
s0.Length >= s25 && methodof(s6.Equals) == methodof(int.Equals) && s27 != x && s28 != y && methodof(s1.LastIndexOf) == methodof(ArrayList.LastIndexOf) && 
methodof(s1.LastIndexOf) == methodof(ArrayList.LastIndexOf) && methodof(s7[-1 + s25].Equals) == methodof(int.Equals) && s29 != x && s31 != y && 
methodof(s1.Contains) == methodof(ArrayList.Contains) && s32 != x && s33 != y && methodof(s1.Add) == methodof(ArrayList.Add) && s25 != s0.Length && methodof(s34.Equals) == methodof(int.Equals) && 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    s36 != y && methodof(s37.Equals) == methodof(int.Equals) && methodof(s38.Equals) == methodof(int.Equals) && s40 != y && 2 * s23 >= 1 + s23 && 2 * s23 >= s23 && 2 * s23 != s23;
]]></pathCondition>
</generatedTest>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.01"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.01"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<log level="message" time="2018-12-13 18:27:40Z" category="progress" message="  250 constraint systems (28.40% solved, 71.60% proven unsatisfiable)"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.01"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.01"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.01"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.01"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.01"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.01"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.01"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.01"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.01"/>
<log level="message" time="2018-12-13 18:27:45Z" category="progress" message="   77 runs (42.86% retries), 87/134 blocks covered"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.01"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.01"/>
<log level="message" time="2018-12-13 18:27:45Z" category="progress" message="  500 constraint systems (31.20% solved, 68.80% proven unsatisfiable)"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.01"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.01"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.01"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.01"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.01"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.01"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.01"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.01"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.01"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.01"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.01"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.01"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.01"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<test name="PUT_CommutativityAddContains" state="success" duration="0.00"/>
<coverage domain="usercodeundertest" unit="block" covered="87" total="134" coveredRatio="0.64925373134328357"/>
<sourceCoverage xml="cov\e304\cov.xml" html="cov\e304\cov.html"/>
<result name="PUT_CommutativityAddContains(ArrayList, Int32, Int32)" state="success" duration="18.1348868622016"/>
<duration start="2018-12-13 18:27:34Z" end="2018-12-13 18:27:52Z" seconds="18.190983"/>
<trajectory><image src="fix\datastructureste636803008722156346.trajectories.png" width="800" height="1600"/>
</trajectory>
</exploration>
<generatedFixture type="ArrayListTest" src="D:\MultiLearnerPrecondition\BenchmarksAll\DataStructures\DataStructuresTest\bin\Debug\myreport\rep\tests\DataStructures\Test\ArrayListTestPUT_CommutativityAddContain.g.cs"/>
<coverage domain="usercodeundertest" unit="block" covered="87" total="134" coveredRatio="0.64925373134328357"/>
<sourceCoverage xml="cov\t102\cov.xml" html="cov\t102\cov.html"/>
<duration start="2018-12-13 18:27:33Z" end="2018-12-13 18:27:52Z" seconds="18.3612128"/>
</fixture>
<coverage domain="usercodeundertest" unit="block" covered="87" total="134" coveredRatio="0.64925373134328357"/>
<sourceCoverage xml="cov\a46051872\cov.xml" html="cov\a46051872\cov.html"/>
<duration start="2018-12-13 18:27:33Z" end="2018-12-13 18:27:52Z" seconds="18.4507537"/>
<frameTreeRef exceptionCount="1"/>
</assembly>
<duration start="2018-12-13 18:27:33Z" end="2018-12-13 18:27:52Z" seconds="18.9559378"/>
<background/>
</pex>

<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>9.0.21022</ProductVersion>
    <ProjectGuid>{08BDDF91-2515-46A5-93E1-AA109C373400}</ProjectGuid>
    <!-- update GUID here -->
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Dsa.Tests</RootNamespace>
    <!-- update root namespace -->
    <AssemblyName>Dsa.Tests</AssemblyName>
    <!-- update assembly name -->
    <CodeContractsEnableRuntimeChecking>True</CodeContractsEnableRuntimeChecking>
    <CodeContractsRuntimeCheckingLevel>Full</CodeContractsRuntimeCheckingLevel>
    <OutputPath>bin\$(Configuration)\</OutputPath>
    <ProjectTypeGuids>{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <CodeContractsAssemblyMode>0</CodeContractsAssemblyMode>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <DefineConstants>DEBUG;TRACE;$(CommonDefineConstants)</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <DocumentationFile>$(OutputPath)\$(AssemblyName).xml</DocumentationFile>
    <NoWarn>1587;1591</NoWarn>
    <CodeContractsEnableRuntimeChecking>False</CodeContractsEnableRuntimeChecking>
    <CodeContractsRuntimeOnlyPublicSurface>False</CodeContractsRuntimeOnlyPublicSurface>
    <CodeContractsRuntimeThrowOnFailure>True</CodeContractsRuntimeThrowOnFailure>
    <CodeContractsRuntimeCallSiteRequires>False</CodeContractsRuntimeCallSiteRequires>
    <CodeContractsRuntimeSkipQuantifiers>False</CodeContractsRuntimeSkipQuantifiers>
    <CodeContractsRunCodeAnalysis>False</CodeContractsRunCodeAnalysis>
    <CodeContractsNonNullObligations>True</CodeContractsNonNullObligations>
    <CodeContractsBoundsObligations>True</CodeContractsBoundsObligations>
    <CodeContractsArithmeticObligations>True</CodeContractsArithmeticObligations>
    <CodeContractsEnumObligations>True</CodeContractsEnumObligations>
    <CodeContractsRedundantAssumptions>True</CodeContractsRedundantAssumptions>
    <CodeContractsAssertsToContractsCheckBox>True</CodeContractsAssertsToContractsCheckBox>
    <CodeContractsRedundantTests>True</CodeContractsRedundantTests>
    <CodeContractsMissingPublicRequiresAsWarnings>True</CodeContractsMissingPublicRequiresAsWarnings>
    <CodeContractsMissingPublicEnsuresAsWarnings>False</CodeContractsMissingPublicEnsuresAsWarnings>
    <CodeContractsInferRequires>True</CodeContractsInferRequires>
    <CodeContractsInferEnsures>False</CodeContractsInferEnsures>
    <CodeContractsInferEnsuresAutoProperties>True</CodeContractsInferEnsuresAutoProperties>
    <CodeContractsInferObjectInvariants>False</CodeContractsInferObjectInvariants>
    <CodeContractsSuggestAssumptions>False</CodeContractsSuggestAssumptions>
    <CodeContractsSuggestAssumptionsForCallees>False</CodeContractsSuggestAssumptionsForCallees>
    <CodeContractsSuggestRequires>False</CodeContractsSuggestRequires>
    <CodeContractsNecessaryEnsures>True</CodeContractsNecessaryEnsures>
    <CodeContractsSuggestObjectInvariants>False</CodeContractsSuggestObjectInvariants>
    <CodeContractsSuggestReadonly>True</CodeContractsSuggestReadonly>
    <CodeContractsRunInBackground>True</CodeContractsRunInBackground>
    <CodeContractsShowSquigglies>True</CodeContractsShowSquigglies>
    <CodeContractsUseBaseLine>False</CodeContractsUseBaseLine>
    <CodeContractsEmitXMLDocs>False</CodeContractsEmitXMLDocs>
    <CodeContractsCustomRewriterAssembly />
    <CodeContractsCustomRewriterClass />
    <CodeContractsLibPaths />
    <CodeContractsExtraRewriteOptions />
    <CodeContractsExtraAnalysisOptions />
    <CodeContractsSQLServerOption />
    <CodeContractsBaseLineFile />
    <CodeContractsCacheAnalysisResults>True</CodeContractsCacheAnalysisResults>
    <CodeContractsSkipAnalysisIfCannotConnectToCache>False</CodeContractsSkipAnalysisIfCannotConnectToCache>
    <CodeContractsFailBuildOnWarnings>False</CodeContractsFailBuildOnWarnings>
    <CodeContractsBeingOptimisticOnExternal>True</CodeContractsBeingOptimisticOnExternal>
    <CodeContractsRuntimeCheckingLevel>Full</CodeContractsRuntimeCheckingLevel>
    <CodeContractsReferenceAssembly>%28none%29</CodeContractsReferenceAssembly>
    <CodeContractsAnalysisWarningLevel>0</CodeContractsAnalysisWarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <DefineConstants>TRACE;$(CommonDefineConstants)</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <DocumentationFile>$(OutputPath)\$(AssemblyName).xml</DocumentationFile>
    <NoWarn>1587;1591</NoWarn>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Dsa.Moles, Version=0.6.6330.42554, Culture=neutral, processorArchitecture=MSIL" />
    <Reference Include="Microsoft.Pex.Framework, Version=0.94.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35">
      <HintPath>C:\Program Files (x86)\Microsoft Pex\bin\Microsoft.Pex.Framework.dll</HintPath>
      <SpecificVersion>False</SpecificVersion>
      <CopyLocal>False</CopyLocal>
      <EmbedInteropTypes>False</EmbedInteropTypes>
    </Reference>
    <Reference Include="Microsoft.Moles.Framework, Version=0.94.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35">
      <HintPath>C:\Program Files (x86)\Microsoft Moles\bin\Microsoft.Moles.Framework.dll</HintPath>
      <SpecificVersion>False</SpecificVersion>
      <CopyLocal>False</CopyLocal>
      <EmbedInteropTypes>False</EmbedInteropTypes>
    </Reference>
    <Reference Include="Microsoft.VisualStudio.QualityTools.UnitTestFramework">
      <EmbedInteropTypes>False</EmbedInteropTypes>
    </Reference>
    <Reference Include="Microsoft.Pex.Linq">
      <EmbedInteropTypes>False</EmbedInteropTypes>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Dsa\Dsa.csproj">
      <Project>{928B4724-1973-454B-BDA3-19D782D3F88D}</Project>
      <Name>Dsa</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Algorithms\NumbersTest.Factorial.g.cs">
      <DependentUpon>NumbersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Algorithms\NumbersTest.Fibonacci.g.cs">
      <DependentUpon>NumbersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Algorithms\NumbersTest.GreatestCommonDenominator.g.cs">
      <DependentUpon>NumbersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Algorithms\NumbersTest.IsPrime.g.cs">
      <DependentUpon>NumbersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Algorithms\NumbersTest.MaxValue.g.cs">
      <DependentUpon>NumbersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Algorithms\NumbersTest.Power.g.cs">
      <DependentUpon>NumbersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Algorithms\NumbersTest.ToBinary.g.cs">
      <DependentUpon>NumbersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Algorithms\NumbersTest.ToHex.g.cs">
      <DependentUpon>NumbersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Algorithms\NumbersTest.ToOctal.g.cs">
      <DependentUpon>NumbersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Algorithms\SearchingTest.ProbabilitySearch.g.cs">
      <DependentUpon>SearchingTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Algorithms\SearchingTest.SequentialSearch.g.cs">
      <DependentUpon>SearchingTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Algorithms\SortingTest.BubbleSort.g.cs">
      <DependentUpon>SortingTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Algorithms\SortingTest.Concatenate.g.cs">
      <DependentUpon>SortingTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Algorithms\SortingTest.InsertionSort.g.cs">
      <DependentUpon>SortingTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Algorithms\SortingTest.MedianLeft.g.cs">
      <DependentUpon>SortingTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Algorithms\SortingTest.MergeOrdered.g.cs">
      <DependentUpon>SortingTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Algorithms\SortingTest.MergeSort.g.cs">
      <DependentUpon>SortingTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Algorithms\SortingTest.QuickSort.g.cs">
      <DependentUpon>SortingTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Algorithms\SortingTest.RadixSort.g.cs">
      <DependentUpon>SortingTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Algorithms\SortingTest.ShellSort.g.cs">
      <DependentUpon>SortingTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Algorithms\StringsTest.Any.g.cs">
      <DependentUpon>StringsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Algorithms\StringsTest.IsPalindrome.g.cs">
      <DependentUpon>StringsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Algorithms\StringsTest.RepeatedWordCount.g.cs">
      <DependentUpon>StringsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Algorithms\StringsTest.Reverse.g.cs">
      <DependentUpon>StringsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Algorithms\StringsTest.ReverseWords.g.cs">
      <DependentUpon>StringsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Algorithms\StringsTest.Strip.g.cs">
      <DependentUpon>StringsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Algorithms\StringsTest.WordCount.g.cs">
      <DependentUpon>StringsTest.cs</DependentUpon>
    </Compile>
    <Compile Include="DataStructures\AvlTreeNodeTTest.Constructor.g.cs">
      <DependentUpon>AvlTreeNodeTTest.cs</DependentUpon>
    </Compile>
    <Compile Include="DataStructures\BinaryTreeNodeTTest.Constructor.g.cs">
      <DependentUpon>BinaryTreeNodeTTest.cs</DependentUpon>
    </Compile>
    <Compile Include="DataStructures\DoublyLinkedListNodeTTest.Constructor.g.cs">
      <DependentUpon>DoublyLinkedListNodeTTest.cs</DependentUpon>
    </Compile>
    <Compile Include="DataStructures\SinglyLinkedListNodeTTest.Constructor.g.cs">
      <DependentUpon>SinglyLinkedListNodeTTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Properties\PexAssemblyInfo.cs" />
    <Compile Include="Properties\Properties\AssemblyInfo.cs.cs" />
    <Compile Include="DataStructures\AvlTreeNodeTTest.cs" />
    <Compile Include="DataStructures\AvlTreeTTest.cs" />
    <Compile Include="DataStructures\BinarySearchTreeTest.cs" />
    <Compile Include="DataStructures\BinaryTreeNodeTTest.cs" />
    <Compile Include="DataStructures\CollectionBaseTTest.cs" />
    <Compile Include="DataStructures\CommonBinaryTreeTNodeTValueTest.cs" />
    <Compile Include="DataStructures\Utility\CompareTest.AreEqual.g.cs">
      <DependentUpon>CompareTest.cs</DependentUpon>
    </Compile>
    <Compile Include="DataStructures\Utility\CompareTest.cs" />
    <Compile Include="DataStructures\DequeTTest.cs" />
    <Compile Include="DataStructures\DoublyLinkedListNodeTTest.cs" />
    <Compile Include="DataStructures\DoublyLinkedListTTest.cs" />
    <Compile Include="DataStructures\Utility\CompareTest.IsGreaterThan.g.cs">
      <DependentUpon>CompareTest.cs</DependentUpon>
    </Compile>
    <Compile Include="DataStructures\Utility\CompareTest.IsLessThan.g.cs">
      <DependentUpon>CompareTest.cs</DependentUpon>
    </Compile>
    <Compile Include="DataStructures\Utility\GuardTest.ArgumentNull.g.cs">
      <DependentUpon>GuardTest.cs</DependentUpon>
    </Compile>
    <Compile Include="DataStructures\Utility\GuardTest.cs" />
    <Compile Include="DataStructures\HeapTTest.cs" />
    <Compile Include="Algorithms\NumbersTest.cs" />
    <Compile Include="DataStructures\OrderedSetTTest.cs" />
    <Compile Include="DataStructures\PriorityQueueTTest.cs" />
    <Compile Include="Algorithms\SearchingTest.cs" />
    <Compile Include="Algorithms\SetsTest.cs" />
    <Compile Include="DataStructures\SinglyLinkedListNodeTTest.cs" />
    <Compile Include="DataStructures\SinglyLinkedListTTest.cs" />
    <Compile Include="Algorithms\SortingTest.cs" />
    <Compile Include="Algorithms\StringsTest.cs" />
    <Compile Include="DataStructures\Utility\GuardTest.InvalidOperation.g.cs">
      <DependentUpon>GuardTest.cs</DependentUpon>
    </Compile>
    <Compile Include="DataStructures\Utility\GuardTest.OutOfRange.g.cs">
      <DependentUpon>GuardTest.cs</DependentUpon>
    </Compile>
    <Moles Include="Dsa.moles" />
  </ItemGroup>
  <Import Condition="$(MSBuildToolsPath) != ''" Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Condition="$(MSBuildToolsPath) == ''" Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
</Project>